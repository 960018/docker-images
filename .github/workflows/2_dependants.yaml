name: build dependants
run-name: build dependants

on:
    repository_dispatch:
        types: [ independent ]

env:
    BUILDS: "bun nginx node cron go"
    SIMILAR: "bun nginx cron node"
    EVENT: dependants
    LATEST_TAG: latest
    GO_NAME: go
    OWNER: ghcr.io/960018

jobs:

    build:
        runs-on: self-arm64
        steps:
            -   name: login
                uses: docker/login-action@v3
                with:
                    registry: ghcr.io
                    username: ${{ github.repository_owner }}
                    password: ${{ secrets.GH_TOKEN }}
            -   name: checkout
                uses: actions/checkout@v4
            -   name: buildkit
                uses: docker/setup-buildx-action@v3
                with:
                    driver-opts: image=moby/buildkit:master-rootless
            -   name: dependencies
                run: |
                    docker pull ghcr.io/960018/scratch:latest
                    docker pull ghcr.io/960018/debian:latest
                    docker pull oven/bun:canary-debian
                    docker pull nginx:mainline-bookworm
                    docker pull node:current-bookworm-slim
            -   name: download go latest
                id: golatest
                uses: ./.github/actions/download-go
                with:
                    version: latest
                    arch: arm64
            -   name: download go unstable
                id: gounstable
                uses: ./.github/actions/download-go
                with:
                    version: unstable
                    arch: arm64
            -   name: build go latest
                uses: docker/build-push-action@v6
                with:
                    context: .
                    file: ${{ env.GO_NAME }}.dockerfile
                    push: true
                    no-cache: ${{ github.event.client_payload.no_cache || false }}
                    provenance: true
                    sbom: true
                    tags: |
                        ${{ env.OWNER }}/${{ env.GO_NAME }}:arm64
                        ${{ env.OWNER }}/${{ env.GO_NAME }}:${{ env.LATEST_TAG }}
                    build-args: |
                        GO_VERSION=${{ steps.golatest.outputs.go_version }}
                        CACHE_BUSTER=${{ github.run_id }}
                        GO_ROOT=go-root-latest
            -   name: build go unstable
                uses: docker/build-push-action@v6
                with:
                    context: .
                    file: ${{ env.GO_NAME }}.dockerfile
                    push: true
                    no-cache: ${{ github.event.client_payload.no_cache || false }}
                    provenance: true
                    sbom: true
                    tags: ${{ env.OWNER }}/${{ env.GO_NAME }}:unstable-arm64
                    build-args: |
                        GO_VERSION=${{ steps.gounstable.outputs.go_version }}
                        CACHE_BUSTER=${{ github.run_id }}
                        GO_ROOT=go-root-unstable
            -   name: build similar
                run: |
                    NO_CACHE="${{ github.event.client_payload.no_cache || 'false' }}"
                    for build_name in ${{ env.SIMILAR }}; do
                        NO_CACHE_FLAG=""
                        if [ "$NO_CACHE" = "true" ]; then
                            NO_CACHE_FLAG="--no-cache"
                        fi
                    
                        docker buildx build \
                            --file ${build_name}.dockerfile \
                            --push \
                            --no-cache \
                            --provenance=true \
                            ${NO_CACHE_FLAG} \
                            --sbom=true \
                            --tag ${{ env.OWNER }}/${build_name}:arm64 \
                            --tag ${{ env.OWNER }}/${build_name}:${{ env.LATEST_TAG }} \
                            --build-arg CACHE_BUSTER=${{ github.run_id }} \
                            .
                    done
            -   name: cleanup
                run: |
                    ls -la ./
                    rm -rf ./* || true
                    rm -rf ./.??* || true
                    ls -la ./
                    docker builder prune -af

    dispatch:
        runs-on: ubuntu-latest
        needs: [ build ]
        steps:
            -   name: dispatch
                if: ${{ github.event.client_payload.skip_dispatch != true }}
                uses: peter-evans/repository-dispatch@v3
                with:
                    event-type: ${{ env.EVENT }}
                    token: ${{ secrets.GH_TOKEN }}
                    repository: 960018/docker-images
                    client-payload: '{"no_cache": "${{ github.event.client_payload.no_cache || false }}"}'
