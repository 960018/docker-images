name: build php-fpm sockets
run-name: build php-fpm sockets

on:
    repository_dispatch:
        types: [ php-fpm-testing ]

env:
    EVENT: php-fpm-socket
    LATEST_TAG: latest
    PHP_NAME: fpm-socket
    PHP_NAME_TESTTING: fpm-testing-socket
    OWNER: ghcr.io/960018/php

jobs:

    build:
        runs-on: self-arm64
        steps:
            -   name: login
                uses: docker/login-action@v3
                with:
                    registry: ghcr.io
                    username: ${{ github.repository_owner }}
                    password: ${{ secrets.GH_TOKEN }}
            -   name: checkout
                uses: actions/checkout@v4
            -   name: buildkit
                uses: docker/setup-buildx-action@v3
                with:
                    driver-opts: image=moby/buildkit:master-rootless
            -   name: dependencies
                run: |
                    docker pull ghcr.io/960018/php/fpm:latest
                    docker pull ghcr.io/960018/php/fpm-testing:latest
            -   name: build php-fpm socket
                uses: docker/build-push-action@v6
                with:
                    context: .
                    file: php-${{ env.PHP_NAME }}.dockerfile
                    push: true
                    no-cache: ${{ github.event.client_payload.no_cache || false }}
                    provenance: true
                    sbom: true
                    tags: |
                        ${{ env.OWNER }}/${{ env.PHP_NAME }}:arm64
                        ${{ env.OWNER }}/${{ env.PHP_NAME }}:${{ env.LATEST_TAG }}
                    build-args: |
                        CACHE_BUSTER=${{ github.run_id }}
            -   name: build php-fpm testing socket
                uses: docker/build-push-action@v6
                with:
                    context: .
                    file: php-${{ env.PHP_NAME_TESTTING }}.dockerfile
                    push: true
                    no-cache: ${{ github.event.client_payload.no_cache || false }}
                    provenance: true
                    sbom: true
                    tags: |
                        ${{ env.OWNER }}/${{ env.PHP_NAME_TESTTING }}:arm64
                        ${{ env.OWNER }}/${{ env.PHP_NAME_TESTTING }}:${{ env.LATEST_TAG }}
                    build-args: |
                        CACHE_BUSTER=${{ github.run_id }}
            -   name: cleanup
                run: |
                    ls -la ./
                    rm -rf ./* || true
                    rm -rf ./.??* || true
                    ls -la ./
                    docker builder prune -af

    dispatch:
        runs-on: ubuntu-latest
        needs: [ build ]
        steps:
            -   name: dispatch
                if: ${{ github.event.client_payload.skip_dispatch != true }}
                uses: peter-evans/repository-dispatch@v3
                with:
                    event-type: ${{ env.EVENT }}
                    token: ${{ secrets.GH_TOKEN }}
                    repository: 960018/docker-images
                    client-payload: '{"no_cache": "${{ github.event.client_payload.no_cache || false }}"}'
