name: build php-fpm base
run-name: build php-fpm base

on:
    repository_dispatch:
        types: [ curl ]

env:
    EVENT: php-fpm-base
    LATEST_TAG: latest
    PHP_NAME: fpm-base
    OWNER: ghcr.io/960018/php

jobs:

    build:
        strategy:
            matrix:
                arch: [ amd64, arm64 ]
                include:
                    -   arch: amd64
                        os: self-amd64
                    -   arch: arm64
                        os: self-arm64
        runs-on: ${{ matrix.os }}
        steps:
            -   name: login
                uses: docker/login-action@v3
                with:
                    registry: ghcr.io
                    username: ${{ github.repository_owner }}
                    password: ${{ secrets.GH_TOKEN }}
            -   name: checkout
                uses: actions/checkout@v4
            -   name: buildkit
                uses: docker/setup-buildx-action@v3
                with:
                    driver-opts: image=moby/buildkit:master-rootless
            -   name: clone
                id: clone
                run: |
                    clone_repo() {
                        cd php
                        git clone --single-branch $1 $2
                        cd $2
                        git submodule update --init --force
                    
                        COMMIT_HASH=$(git rev-parse HEAD)
                    
                        rm -rf .git .github
                        cd ../..
                    
                        echo "${2}_commit_hash=$COMMIT_HASH" >> $GITHUB_OUTPUT
                    }
                    clone_repo https://github.com/fork-php/php-src.git source
            -   name: build php-fpm base
                uses: docker/build-push-action@v6
                with:
                    context: .
                    file: php-${{ env.PHP_NAME }}.dockerfile
                    push: true
                    no-cache: ${{ github.event.client_payload.no_cache || false }}
                    pull: ${{ github.event.client_payload.no_cache || false }}
                    provenance: true
                    sbom: ${{ matrix.arch == 'amd64' }}
                    tags: ${{ env.OWNER }}/${{ env.PHP_NAME }}:${{ matrix.arch }}
                    build-args: |
                        PHP_COMMIT_HASH=${{ steps.clone.outputs.source_commit_hash }}
                        ARCH=${{ matrix.arch }}
                        CACHE_BUSTER=${{ github.run_id }}
            -   name: cleanup
                run: |
                    ls -la ./
                    rm -rf ./* || true
                    rm -rf ./.??* || true
                    ls -la ./
                    docker builder prune -af

    multiarch:
        runs-on: ubuntu-latest
        needs: [ build ]
        steps:
            -   name: login
                uses: docker/login-action@v3
                with:
                    registry: ghcr.io
                    username: ${{ github.repository_owner }}
                    password: ${{ secrets.GH_TOKEN }}
            -   name: buildkit
                uses: docker/setup-buildx-action@v3
                with:
                    driver-opts: image=moby/buildkit:master-rootless
            -   name: multiarch
                run: |
                    docker buildx imagetools create ${{ env.OWNER }}/${{ env.PHP_NAME }}:amd64 ${{ env.OWNER }}/${{ env.PHP_NAME }}:arm64 --tag ${{ env.OWNER }}/${{ env.PHP_NAME }}:${{ env.LATEST_TAG }}
            -   name: dispatch
                if: ${{ github.event.client_payload.skip_dispatch != true }}
                uses: peter-evans/repository-dispatch@v3
                with:
                    event-type: ${{ env.EVENT }}
                    token: ${{ secrets.GH_TOKEN }}
                    repository: 960018/docker-images
                    client-payload: '{"no_cache": "${{ github.event.client_payload.no_cache || false }}"}'
